{"ast":null,"code":"var _jsxFileName = \"D:\\\\JS old\\\\Create\\\\demo\\\\src\\\\baiTap26\\\\Check_Box.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst courses = [{\n  id: 1,\n  name: 'ABC,CSS'\n}, {\n  id: 2,\n  name: 'Hook-Function'\n}, {\n  id: 3,\n  name: 'ReactJS-Hook'\n}];\n\nfunction CheckBox() {\n  _s();\n\n  const [checked, setChecked] = useState([]);\n  console.log(checked);\n\n  const handlerCheckBox = () => {};\n\n  const handlerChange = id => {\n    setChecked(prev => {\n      const isCheck = checked.includes(id);\n\n      if (isCheck) {\n        return checked.filter(item => item !== id);\n      } else {\n        return [...prev, id];\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [courses.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: checked.includes(item.id),\n        onChange: () => handlerChange(item.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), item.name]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlerCheckBox,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CheckBox, \"wpcTo92rLAYHEZ4hrradcMGvahE=\");\n\n_c = CheckBox;\nexport default CheckBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"sources":["D:/JS old/Create/demo/src/baiTap26/Check_Box.js"],"names":["useState","courses","id","name","CheckBox","checked","setChecked","console","log","handlerCheckBox","handlerChange","prev","isCheck","includes","filter","item","map","index"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AACA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE;AAFV,CADY,EAKZ;AACID,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE;AAFV,CALY,EASZ;AACID,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE;AAFV,CATY,CAAhB;;AAcA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AACA,QAAMI,eAAe,GAAG,MAAM,CAE7B,CAFD;;AAGA,QAAMC,aAAa,GAAIR,EAAD,IAAQ;AAC1BI,IAAAA,UAAU,CAACK,IAAI,IAAI;AACf,YAAMC,OAAO,GAAGP,OAAO,CAACQ,QAAR,CAAiBX,EAAjB,CAAhB;;AACA,UAAIU,OAAJ,EAAa;AACT,eAAOP,OAAO,CAACS,MAAR,CAAeC,IAAI,IAAIA,IAAI,KAAKb,EAAhC,CAAP;AACH,OAFD,MAGK;AACD,eAAO,CAAC,GAAGS,IAAJ,EAAUT,EAAV,CAAP;AACH;AACJ,KARS,CAAV;AASH,GAVD;;AAWA,sBACI;AAAA,eACKD,OAAO,CAACe,GAAR,CAAY,CAACD,IAAD,EAAOE,KAAP,kBACT;AAAA,8BACI;AAAO,QAAA,IAAI,EAAE,UAAb;AAAyB,QAAA,OAAO,EAAEZ,OAAO,CAACQ,QAAR,CAAiBE,IAAI,CAACb,EAAtB,CAAlC;AAA6D,QAAA,QAAQ,EAAE,MAAMQ,aAAa,CAACK,IAAI,CAACb,EAAN;AAA1F;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKa,IAAI,CAACZ,IAFV;AAAA,OAAUc,KAAV;AAAA;AAAA;AAAA;AAAA,YADH,CADL,eAQI;AAAQ,MAAA,OAAO,EAAER,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAYH;;GA7BQL,Q;;KAAAA,Q;AA8BT,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\nconst courses = [\r\n    {\r\n        id: 1,\r\n        name: 'ABC,CSS'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Hook-Function'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'ReactJS-Hook'\r\n    }\r\n]\r\nfunction CheckBox() {\r\n    const [checked, setChecked] = useState([]);\r\n    console.log(checked);\r\n    const handlerCheckBox = () => {\r\n\r\n    }\r\n    const handlerChange = (id) => {\r\n        setChecked(prev => {\r\n            const isCheck = checked.includes(id);\r\n            if (isCheck) {\r\n                return checked.filter(item => item !== id)\r\n            }\r\n            else {\r\n                return [...prev, id];\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            {courses.map((item, index) => (\r\n                <div key={index}>\r\n                    <input type={\"checkbox\"} checked={checked.includes(item.id)} onChange={() => handlerChange(item.id)} />\r\n                    {item.name}\r\n                </div>\r\n            ))}\r\n\r\n            <button onClick={handlerCheckBox}>Register</button>\r\n        </>\r\n    )\r\n}\r\nexport default CheckBox;"]},"metadata":{},"sourceType":"module"}