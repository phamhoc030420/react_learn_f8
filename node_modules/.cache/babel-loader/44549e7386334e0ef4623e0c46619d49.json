{"ast":null,"code":"var _jsxFileName = \"D:\\\\JS old\\\\Create\\\\demo\\\\src\\\\todoGlobal.js\",\n    _s = $RefreshSig$();\n\nimport { useStore, actions } from \"./store\";\nimport { useRef } from \"react\";\nimport { setTodoInput } from \"./store/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ToDo() {\n  _s();\n\n  const [state, dispatch] = useStore();\n  const {\n    todos,\n    todoInput\n  } = state;\n  const inputRef = useRef();\n\n  const handleSubmit = () => {\n    dispatch(actions.addToDo(todoInput));\n    dispatch(setTodoInput(''));\n    inputRef.current.focus();\n  };\n\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      value: todoInput,\n      placeholder: \"Enter todo...\",\n      onChange: e => {\n        dispatch(actions.setTodoInput(e.target.value));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: handleDelete,\n          style: {\n            cursor: 'pointer'\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 44\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ToDo, \"tPltr6BO38Y72vncsrVnSPyOs28=\", false, function () {\n  return [useStore];\n});\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["D:/JS old/Create/demo/src/todoGlobal.js"],"names":["useStore","actions","useRef","setTodoInput","ToDo","state","dispatch","todos","todoInput","inputRef","handleSubmit","addToDo","current","focus","console","log","e","target","value","map","item","index","handleDelete","cursor"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,SAAlC;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;;AACA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACA,QAAM;AAAEO,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBH,KAA7B;AACA,QAAMI,QAAQ,GAAGP,MAAM,EAAvB;;AACA,QAAMQ,YAAY,GAAG,MAAM;AACvBJ,IAAAA,QAAQ,CAACL,OAAO,CAACU,OAAR,CAAgBH,SAAhB,CAAD,CAAR;AACAF,IAAAA,QAAQ,CAACH,YAAY,CAAC,EAAD,CAAb,CAAR;AACAM,IAAAA,QAAQ,CAACG,OAAT,CAAiBC,KAAjB;AACH,GAJD;;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,sBACI;AAAA,4BACI;AAAO,MAAA,GAAG,EAAEE,QAAZ;AAAsB,MAAA,KAAK,EAAED,SAA7B;AAAwC,MAAA,WAAW,EAAC,eAApD;AACI,MAAA,QAAQ,EAAEQ,CAAC,IAAI;AAAEV,QAAAA,QAAQ,CAACL,OAAO,CAACE,YAAR,CAAqBa,CAAC,CAACC,MAAF,CAASC,KAA9B,CAAD,CAAR;AAAgD;AADrE;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAQ,MAAA,OAAO,EAAER,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,gBACKH,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACP;AAAA,mBAAiBD,IAAjB,oBAAuB;AAAM,UAAA,OAAO,EAAEE,YAAf;AAA6B,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAvB;AAAA,SAASF,KAAT;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAaH;;GAvBQjB,I;UACqBJ,Q;;;KADrBI,I;AAwBT,eAAeA,IAAf","sourcesContent":["import { useStore, actions } from \"./store\";\r\nimport { useRef } from \"react\";\r\nimport { setTodoInput } from \"./store/action\";\r\nfunction ToDo() {\r\n    const [state, dispatch] = useStore();\r\n    const { todos, todoInput } = state;\r\n    const inputRef = useRef();\r\n    const handleSubmit = () => {\r\n        dispatch(actions.addToDo(todoInput))\r\n        dispatch(setTodoInput(''))\r\n        inputRef.current.focus()\r\n    }\r\n    console.log(todos);\r\n    return (\r\n        <>\r\n            <input ref={inputRef} value={todoInput} placeholder=\"Enter todo...\"\r\n                onChange={e => { dispatch(actions.setTodoInput(e.target.value)) }} />\r\n            <button onClick={handleSubmit}>Add</button>\r\n            <ul>\r\n                {todos.map((item, index) => (\r\n                    <li key={index}>{item} <span onClick={handleDelete} style={{ cursor: 'pointer' }}>X</span></li>\r\n\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\nexport default ToDo"]},"metadata":{},"sourceType":"module"}