{"ast":null,"code":"var _jsxFileName = \"D:\\\\JS old\\\\Create\\\\demo\\\\src\\\\useContext\\\\useContext.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Content from \"./content\";\nimport '..App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UseContext() {\n  _s();\n\n  const [theme, setTheme] = useState('dark');\n\n  const toggleTheme = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Content, {\n      theme: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      children: \"Toggel Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UseContext, \"sDHyzaxN8G4vvn/5pnEI6TWCVhM=\");\n\n_c = UseContext;\nexport default UseContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseContext\");","map":{"version":3,"sources":["D:/JS old/Create/demo/src/useContext/useContext.js"],"names":["useState","Content","UseContext","theme","setTheme","toggleTheme"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,WAAP;;;;AACA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,MAAD,CAAlC;;AACA,QAAMK,WAAW,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAACD,KAAK,KAAK,MAAV,GAAmB,OAAnB,GAA6B,MAA9B,CAAR;AACH,GAFD;;AAGA,sBACI;AAAA,4BAEI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAOH;;GAZQH,U;;KAAAA,U;AAaT,eAAeA,UAAf","sourcesContent":["import { useState } from \"react\";\r\nimport Content from \"./content\";\r\nimport '..App.css'\r\nfunction UseContext() {\r\n    const [theme, setTheme] = useState('dark')\r\n    const toggleTheme = () => {\r\n        setTheme(theme === 'dark' ? 'light' : 'dark')\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <Content theme={theme} />\r\n            <button onClick={toggleTheme}>Toggel Theme</button>\r\n        </>\r\n    )\r\n}\r\nexport default UseContext;"]},"metadata":{},"sourceType":"module"}