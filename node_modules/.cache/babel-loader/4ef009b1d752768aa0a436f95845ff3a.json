{"ast":null,"code":"var _jsxFileName = \"D:\\\\JS old\\\\Create\\\\demo\\\\src\\\\useReducer\\\\useReducer.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useState } from \"react\"; //init State\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initState = 0; //actions\n\nconst UP_ACTION = 'up';\nconst DOWN_ACTION = 'down'; //reducer nhan 2 tham so truyen vao no se dua vao action roi se update state thanh state moi\n\nconst reducer = (state, action) => {\n  switch (action) {\n    case UP_ACTION:\n      {\n        return state += 1;\n      }\n\n    case DOWN_ACTION:\n      {\n        return state -= 1;\n      }\n\n    default:\n      throw new Error('Action error');\n  }\n}; // bai 41 todo useReducer\n\n\nconst initTodo = {\n  job: '',\n  jobs: []\n};\nconst ADD_JOB = 'add_job';\nconst SET_JOB = 'set_job';\nconst DELETE_JOB = 'delete_job';\n\nconst setJob = payload => {\n  return {\n    type: SET_JOB,\n    payload\n  };\n};\n\nconsole.log(setJob());\n\nconst reducerTodo = (state, action) => {};\n\nfunction UseReducer() {\n  _s();\n\n  const [count, dispatch] = useReducer(reducer, initState);\n  const [state, dispatchTodo] = useReducer(reducerTodo, initTodo);\n  const {\n    job,\n    jobs\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch(UP_ACTION);\n      },\n      children: \"Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch(DOWN_ACTION);\n      },\n      children: \"Down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter Todo...\",\n      value: job,\n      onChange: e => {\n        setJob(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: jobs.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item, \" \\xD7\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UseReducer, \"wPbFQuC8nL7Y4xO252FfPyq1PeE=\");\n\n_c = UseReducer;\nexport default UseReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseReducer\");","map":{"version":3,"sources":["D:/JS old/Create/demo/src/useReducer/useReducer.js"],"names":["useReducer","useState","initState","UP_ACTION","DOWN_ACTION","reducer","state","action","Error","initTodo","job","jobs","ADD_JOB","SET_JOB","DELETE_JOB","setJob","payload","type","console","log","reducerTodo","UseReducer","count","dispatch","dispatchTodo","e","target","value","map","item","index"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC,C,CACA;;;;AACA,MAAMC,SAAS,GAAG,CAAlB,C,CACA;;AACA,MAAMC,SAAS,GAAG,IAAlB;AACA,MAAMC,WAAW,GAAG,MAApB,C,CACA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAR;AACI,SAAKJ,SAAL;AACI;AACI,eAAOG,KAAK,IAAI,CAAhB;AAEH;;AACL,SAAKF,WAAL;AACI;AACI,eAAOE,KAAK,IAAI,CAAhB;AAEH;;AACL;AAAS,YAAM,IAAIE,KAAJ,CAAU,cAAV,CAAN;AAXb;AAaH,CAdD,C,CAeA;;;AACA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,GAAG,EAAE,EADQ;AAEbC,EAAAA,IAAI,EAAE;AAFO,CAAjB;AAKA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,UAAU,GAAG,YAAnB;;AACA,MAAMC,MAAM,GAAGC,OAAO,IAAI;AACtB,SAAO;AACHC,IAAAA,IAAI,EAAEJ,OADH;AAEHG,IAAAA;AAFG,GAAP;AAIH,CALD;;AAMAE,OAAO,CAACC,GAAR,CAAYJ,MAAM,EAAlB;;AACA,MAAMK,WAAW,GAAG,CAACd,KAAD,EAAQC,MAAR,KAAmB,CAEtC,CAFD;;AAGA,SAASc,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,UAAU,CAACK,OAAD,EAAUH,SAAV,CAApC;AACA,QAAM,CAACI,KAAD,EAAQkB,YAAR,IAAwBxB,UAAU,CAACoB,WAAD,EAAcX,QAAd,CAAxC;AACA,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAgBL,KAAtB;AACA,sBACI;AAAA,4BACI;AAAA,gBAAKgB;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAEC,QAAAA,QAAQ,CAACpB,SAAD,CAAR;AAAqB,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAEoB,QAAAA,QAAQ,CAACnB,WAAD,CAAR;AAAuB,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAO,MAAA,WAAW,EAAC,eAAnB;AAAmC,MAAA,KAAK,EAAEM,GAA1C;AAA+C,MAAA,QAAQ,EAAEe,CAAC,IAAI;AAAEV,QAAAA,MAAM,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AAAwB;AAAxF;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAA,gBACKhB,IAAI,CAACiB,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACN;AAAA,mBAAiBD,IAAjB;AAAA,SAASC,KAAT;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAmBH;;GAvBQT,U;;KAAAA,U;AAwBT,eAAeA,UAAf","sourcesContent":["import { useReducer, useState } from \"react\";\r\n//init State\r\nconst initState = 0;\r\n//actions\r\nconst UP_ACTION = 'up';\r\nconst DOWN_ACTION = 'down'\r\n//reducer nhan 2 tham so truyen vao no se dua vao action roi se update state thanh state moi\r\nconst reducer = (state, action) => {\r\n    switch (action) {\r\n        case UP_ACTION:\r\n            {\r\n                return state += 1;\r\n\r\n            }\r\n        case DOWN_ACTION:\r\n            {\r\n                return state -= 1;\r\n\r\n            }\r\n        default: throw new Error('Action error')\r\n    }\r\n}\r\n// bai 41 todo useReducer\r\nconst initTodo = {\r\n    job: '',\r\n    jobs: []\r\n}\r\n\r\nconst ADD_JOB = 'add_job';\r\nconst SET_JOB = 'set_job';\r\nconst DELETE_JOB = 'delete_job';\r\nconst setJob = payload => {\r\n    return {\r\n        type: SET_JOB,\r\n        payload\r\n    }\r\n}\r\nconsole.log(setJob())\r\nconst reducerTodo = (state, action) => {\r\n\r\n}\r\nfunction UseReducer() {\r\n    const [count, dispatch] = useReducer(reducer, initState)\r\n    const [state, dispatchTodo] = useReducer(reducerTodo, initTodo)\r\n    const { job, jobs } = state\r\n    return (\r\n        <>\r\n            <h2>{count}</h2>\r\n            <button onClick={() => { dispatch(UP_ACTION) }}>Up</button>\r\n            <button onClick={() => { dispatch(DOWN_ACTION) }}>Down</button>\r\n            <div></div>\r\n            <br></br>\r\n            <h3>Todo</h3>\r\n            <input placeholder=\"Enter Todo...\" value={job} onChange={e => { setJob(e.target.value) }} />\r\n            <button>Add</button>\r\n            <ul>\r\n                {jobs.map((item, index) => (\r\n                    <li key={index}>{item} &times;</li>\r\n                ))}\r\n\r\n\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\nexport default UseReducer;"]},"metadata":{},"sourceType":"module"}